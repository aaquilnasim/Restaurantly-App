package com.restaurant.repository;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.jdbc.core.JdbcTemplate;
import com.restaurant.model.Category;


@Repository
public class CategoryRepository {
	@Autowired
	private JdbcTemplate jdbctemplate;
	
	private org.springframework.jdbc.core.RowMapper<Category> rowMapper= (ResultSet rs, int rowNum)->{
		Category cobj=new Category();
		cobj.setCategoryID(rs.getInt(1));
		cobj.setCategoryName(rs.getString(2));
		cobj.setCategoryDescription(rs.getString(3));
		cobj.setCategoryImage(rs.getString(4));
		
		return cobj;
		};
		
		public ArrayList<Dish> getAllDishes(){
			String sql="select * from dish";
			return (ArrayList<Dish>) jdbctemplate.query(sql, rowMapper);
		}
	
		public Optional<Dish> findById(int id){
			String sql="select * from dish where dishID='"+id+"' ";
			return jdbctemplate.query(sql, rowMapper)
					.stream()
					.findFirst();
		}
		
		public void addDish(Dish d) {
			String query="insert into dish values( '"+d.getDishID()+"','"+d.getDishName()+"','"+d.getDishDescription()+"','"+d.getDishPrice()+"','"+d.getDishImage()+"', '"+d.getNature()+"')";
			jdbctemplate.update(query);
		}
		
		public int updateDish(Dish d,int id) {
			return jdbctemplate.update("update Dish set dishName= '"+ d.getDishName()+ "', dishDescription= '"+ d.getDishDescription()+"', dishPrice='"+d.getDishPrice()+"', dishImage= '"+d.getDishImage()+"', Nature='"+d.getNature()+"' where DishID = '"+id+"';");
		}
		
		public Optional<Dish> deleteDish(int id) {
			Optional<Dish> deleteDish=findById(id);
			String sql="delete from Dish where DishID='"+id+"' ";
			jdbctemplate.execute(sql);
			return deleteDish;
		}
}
